clc;
clear;
N = 30;
kb = 0.01;        %重新升温，检测该值是否为全局极小
map(:,1) = [0;1.53332291658934;2.21665851270269;1.73711081094120;0.898704386538960;2.14759194251954;1.20928440778445;2.20345539028884;1.24512747555464;1.51525622090015;1.12403007245861;1.59079561031376;1.58593926495422;2.77017604182840;2.12431104378195;2.28184599116830;0.628577359076089;0.486948016368651;1.00930100312163;1.32629265403064;1.57988789377054;0.547069728969028;2.02377626881472;2.44348053079845;2.62072896484399;2.22288290857165;1.79806055532055;2.56229074115050;1.14266689855565;1.12372881122700]
map(:,2) = [0;2.30850412019673;0.0814817875046506;3.16206235848107;3.04080873014356;5.47622843016979;5.40273374192709;0.861355360795053;1.01663787993919;6.15836212463160;2.68966036716203;0.344703521090482;4.48325002127374;4.19322175876598;3.93520248584094;3.01616950858194;1.69702625439809;6.23827927189832;4.55823518885132;4.14785759428187;1.91760702440796;4.69072695644413;4.91187957467351;1.87052585084941;1.32916258322161;2.33094899044995;5.71839522585966;5.26227621368709;0.458438274638939;1.62643345795756]
map_try = zeros(N, 2);
energy_now = energy(map(:, 1), map(:, 2));
for t = 10:-0.1:0.1
  for epochs = 1:10000
    counter = 0;
    map_try(2:N, :) = map(2:N, :)+(rand(N-1, 2)-0.5)*pi/3;
    energy_try = energy(map_try(:, 1), map_try(:, 2));
    if (energy_try < energy_now)
      map = map_try;
      energy_now = energy_try;
    else
      prob = exp(-(energy_try-energy_now)/kb/t);
      if (rand() < prob)
        map = map_try;
        energy_now = energy_try;
      end
    end
  end
  disp(energy_now)
end
  map = spheical_norm(map);
  disp(map)
